<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        eP/Z
</value>
  </data>
</root>